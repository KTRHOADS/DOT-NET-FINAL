// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Week14.Models;

namespace Week14.Migrations
{
    [DbContext(typeof(Week14Context))]
    [Migration("20190413024744_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Week14.Models.Bishopric", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Bishopric");
                });

            modelBuilder.Entity("Week14.Models.Hymn", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HymnNumber");

                    b.Property<string>("Title");

                    b.HasKey("ID");

                    b.ToTable("Hymn");
                });

            modelBuilder.Entity("Week14.Models.Meeting", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BenedictionID");

                    b.Property<int>("ClosingHymnID");

                    b.Property<int>("ConductingID");

                    b.Property<DateTime>("Date");

                    b.Property<int>("FirstSpeakerID");

                    b.Property<string>("FirstTopic");

                    b.Property<int>("InterHymnID");

                    b.Property<int>("InvocationID");

                    b.Property<bool>("IsFastSunday");

                    b.Property<int>("LastSpeakerID");

                    b.Property<int>("MiddleSpeakerID");

                    b.Property<int>("OpeningHymnID");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<int>("SacramentHymnID");

                    b.Property<string>("SecondTopic");

                    b.Property<string>("ThirdTopic");

                    b.HasKey("ID");

                    b.HasIndex("BenedictionID");

                    b.HasIndex("ClosingHymnID");

                    b.HasIndex("ConductingID");

                    b.HasIndex("FirstSpeakerID");

                    b.HasIndex("InterHymnID");

                    b.HasIndex("InvocationID");

                    b.HasIndex("LastSpeakerID");

                    b.HasIndex("MiddleSpeakerID");

                    b.HasIndex("OpeningHymnID");

                    b.HasIndex("SacramentHymnID");

                    b.ToTable("Meeting");
                });

            modelBuilder.Entity("Week14.Models.Member", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstMidName")
                        .IsRequired()
                        .HasColumnName("FirstName")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("Week14.Models.Meeting", b =>
                {
                    b.HasOne("Week14.Models.Member", "Benediction")
                        .WithMany()
                        .HasForeignKey("BenedictionID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Week14.Models.Hymn", "ClosingHymn")
                        .WithMany()
                        .HasForeignKey("ClosingHymnID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Week14.Models.Bishopric", "Conducting")
                        .WithMany()
                        .HasForeignKey("ConductingID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Week14.Models.Member", "FirstSpeaker")
                        .WithMany()
                        .HasForeignKey("FirstSpeakerID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Week14.Models.Hymn", "InterHymn")
                        .WithMany()
                        .HasForeignKey("InterHymnID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Week14.Models.Member", "Invocation")
                        .WithMany()
                        .HasForeignKey("InvocationID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Week14.Models.Member", "LastSpeaker")
                        .WithMany()
                        .HasForeignKey("LastSpeakerID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Week14.Models.Member", "MiddleSpeaker")
                        .WithMany()
                        .HasForeignKey("MiddleSpeakerID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Week14.Models.Hymn", "OpeningHymn")
                        .WithMany()
                        .HasForeignKey("OpeningHymnID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Week14.Models.Hymn", "SacramentHymn")
                        .WithMany()
                        .HasForeignKey("SacramentHymnID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
